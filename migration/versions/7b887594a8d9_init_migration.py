"""init_migration

Revision ID: 7b887594a8d9
Revises: 
Create Date: 2025-05-06 18:34:18.302028

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7b887594a8d9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('line',
    sa.Column('line_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('OFFLINE', 'IN_WORK', 'STOPPED', name='statusenum'), nullable=False),
    sa.PrimaryKeyConstraint('line_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('linelog',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('OFFLINE', 'IN_WORK', 'STOPPED', name='statusenum'), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['line_id'], ['line.line_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('lineevent',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=False),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('OFFLINE', 'IN_WORK', 'STOPPED', name='statusenum'), nullable=False),
    sa.ForeignKeyConstraint(['line_id'], ['line.line_id'], ),
    sa.ForeignKeyConstraint(['log_id'], ['linelog.log_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lineevent')
    op.drop_table('linelog')
    op.drop_table('user')
    op.drop_table('line')
    # ### end Alembic commands ###
